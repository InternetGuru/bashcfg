#!/bin/bash

SCRIPT_NAME="$(basename "$0")"
source "$(dirname "$0")/globals"
source "$(dirname "$0")/git_functions"

function git_flow_init {

  ## defaults and constants
  local usage line
  usage="$(formatUsage "
  DESCRIPTION
         $SCRIPT_NAME initialize current folder to be compatible with git flow model mentioned below.

  USAGE
         $SCRIPT_NAME [-h]

  OPTIONS
         -h, --help
                This help (usage).

  SEE
         Git flow model: http://nvie.com/posts/a-successful-git-branching-model/
  ")"

  ## process options
  if ! line=$(
    getopt -n "$0" \
           -o h\? \
           -l help\
           -- "$@"
  )
  then return 1; fi
  eval set -- "$line"

  ## load user options
  while [ $# -gt 0 ]; do
    case $1 in
     -h|-\?|--help) echo -e "$usage" && return 0 ;;
      --) shift; break ;;
      *-) echo "$0: Unrecognized option '$1'" >&2; return 1 ;;
       *) break ;;
    esac
  done

  ## functions

  #
  # Prepare enviroment for git_flow:
  # - create $VERSION and $CHANGELOG file
  # - create dev branch (from master)
  #
  function _git_flow_init {
    local commit checkout_master=true
    # init git repo
    git_repo_exists 2>/dev/null || { git init; checkout_master=false; }
    git_status_empty || return $?
    commit=false
    # checkout to master if it isn't new pository
    $checkout_master \
      && { git checkout master 2>/dev/null \
      || { echo "Branch master not found"; return 1; }; }
    # create $VERSION file
    [[ ! -f $VERSION ]] \
      && echo 0.0.0 > $VERSION \
      && echo "version file $VERSION created" \
      && commit=true
    # create $CHANGELOG file
    [[ ! -f $CHANGELOG ]] \
      && touch $CHANGELOG \
      && echo "changelog file $CHANGELOG created" \
      && commit=true
    # commit changes
    $commit \
      && git add -A \
      && git commit -am "init git flow"
    # create dev branch
    git_branch_exists dev 2>/dev/null || git branch dev
    git checkout dev
  }

  _git_flow_init
}