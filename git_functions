#!/bin/bash

git_diff_inclusive() {
  local from to
  oIFS=$IFS; IFS=.; read from junk to <<< ${1:-HEAD}; IFS=$oIFS
  [[ -z $to ]] && to=$from
  git diff $from~1..$to $2
}

git_delete_branch() {
  git branch -d $1
  git push origin :refs/heads/$1
}

git_delete_tag() {
  git tag -d $1
  git push origin :refs/tags/$1
}

git_log_since() {
  git log --decorate --oneline ${1:+$1~1..}
}

git_upstream() {
  git branch -u "origin/${1:-$(gcb)}"
}

gpull() {
  git pull --tags \
    || return 1
  git remote update origin --prune
  while read -r line; do
    branch="$(basename "$line")"
    current_branch="$(git rev-parse --abbrev-ref HEAD)"
    if [[ "$branch" == "$current_branch" ]]; then
      git_upstream 2>/dev/null \
        || continue
      git pull \
        || return 1
    else
      git fetch origin "$branch:$branch" \
        || return 1
    fi
  done < <(git ls-remote -h --refs origin)
  git submodule update --init --recursive \
    || return 1
}

alias gfi='gf --init'
alias gdi='git_diff_inclusive'
alias gdb='git_delete_branch'
alias gdt='git_delete_tag'
alias gls='git_log_since'
alias gup='git_upstream'
alias gcb='git rev-parse --abbrev-ref HEAD' # git current branch
alias gb='git checkout -b'
alias gd='git diff'
alias gc='git commit'
alias gch='git checkout'
alias gl="git log --oneline --decorate --color --graph"
alias gla="gl --all"
alias gll="git log --all --color --graph --abbrev-commit --pretty=format:'%C(red)%h%Creset%C(yellow)%d%Creset %s %C(green)%cr%C(white dim) %an%Creset'"
alias gpush='git push --all; git push --tags'
alias gpullhard='git reset --hard && gpull'
alias guc='git reset --soft HEAD~1' # git uncommit
alias gs='git status'
alias gaas='git add -A; gs'
